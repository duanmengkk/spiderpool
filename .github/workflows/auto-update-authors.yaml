name: Auto Update Authors

permissions: write-all

on:
  schedule:
    # each day
    - cron: "0 20 * * *"
  workflow_dispatch:
    inputs:
      ref:
        description: 'branch, tag, sha'
        required: true
        default: main

jobs:
  auto-update-authors:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ env.REF }}
    steps:
      - name: Get Ref
        id: get_ref
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }}; then
              echo "call by workflow_dispatch"
              echo "REF=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
          else
              # schedule event
              # use main sha for ci image tag
              echo "REF=main" >> $GITHUB_ENV
          fi

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.REF }}

      - name: update authors of spiderpool
        run: |
          make update-authors
          if [ $? -ne 0 ]; then
            echo "update-authors script failed"
            echo "SKIP_CREATE_PR=true" >> $GITHUB_ENV
          fi
          git_status=$(git status --porcelain)
          if [[ -n "$git_status" ]]; then
            echo "SKIP_CREATE_PR=false" >> $GITHUB_ENV
            echo "The author of Spiderpool has changed."
          else
            echo "The author of Spiderpool has not changed."
            echo "SKIP_CREATE_PR=true" >> $GITHUB_ENV
          fi

      - uses: crazy-max/ghaction-import-gpg@v6
        if: ${{ env.SKIP_CREATE_PR != 'true' }}
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Close existing PRs with same title
        if: ${{ env.SKIP_CREATE_PR != 'true' }}
        run: |
          PR_TITLE="robot updates Spiderpool authors on tag: ${{ env.REF }}"
          echo "Checking for existing PRs with title: $PR_TITLE"
          # Get list of open PRs with the same title
          EXISTING_PRS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open" | \
            jq -r ".[] | select(.title == \"$PR_TITLE\") | .number")
          # Close each existing PR
          for PR_NUMBER in $EXISTING_PRS; do
            echo "Closing existing PR #$PR_NUMBER"
            # Add a comment before closing
            curl -s -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
              -d '{"body":"Closing this PR as a newer version is available."}'
            # Close the PR
            curl -s -X PATCH \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" \
              -d '{"state":"closed"}'
          done

      # Allow auto-merge on general
      - name: Create Pull Request
        if: ${{ env.SKIP_CREATE_PR != 'true' }}
        id: create_pr
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          title: "robot updates Spiderpool authors on tag: ${{ env.REF }}"
          commit-message: "robot updates Spiderpool authors on tag: ${{ env.REF }}"
          branch-suffix: timestamp
          committer: weizhoublue<weizhou.lan@daocloud.io>
          branch: robot/update_doc
          delete-branch: true
          signoff: true
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ env.PR_LABEL }}
          reviewers: ${{ env.PR_REVIWER }}
